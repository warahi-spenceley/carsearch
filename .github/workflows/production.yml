# @TODO reduce the duplicate code by moving some of the logic into files like deploy and test.
# Then have one main file to reference the other files and passing envrionment variables in to determine test and deployments for the correct environment.

name: Test and deploy to AWS Elastic Beanstalk (production environment) 

on:
  push:
    branches:
      - master

jobs:

  test:
    # Run the latest version of Ubuntu.
    runs-on: ubuntu-latest

    steps:
      # Check out to the code.
      - uses: actions/checkout@v3
      # Use the same Node version we are using on AWS to serve our Docker image.
      - name: Use Node.js 12.x
        uses: actions/setup-node@v3
        with:
          node-version: 12.x
      # install dependencies
      - run: npm ci
      # Run unit tests
      - run: npm test

  deploy:
    # Run the latest version of Ubuntu.
    runs-on: ubuntu-latest
    steps:
      # Check out the code
      - name: Checkout Latest Repo
        uses: actions/checkout@master
        
      # Package all of the code into a zip file, except the node_modules folder.
      - name: Generate Deployment Package 
        run: zip -r deploy.zip * -x "**node_modules**"

      # Retrieve a formatted current timestamp, to use as the version label.
      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      # Push the zip file which contains the docker-compose file over to AWS Elastic Beanstalk.
      - name: Deploy to sandbox environment on AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: carsearch
          environment_name: carsearch
          version_label: "the-carsearch-deployment-${{ steps.format-time.outputs.replaced }}"
          region: ap-southeast-2
          deployment_package: deploy.zip
